<?xml version="1.0" encoding="UTF-8"?>
<pmd xmlns="http://pmd.sourceforge.net/report/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pmd.sourceforge.net/report/2.0.0 https://pmd.github.io/schema/report_2_0_0.xsd" version="7.3.0" timestamp="2024-10-29T12:40:04.069">
<file name="/Users/noranemitz/IdeaProjects/Tictactoe/src/main/java/BoardhistoryArray.java">
<violation beginline="30" endline="30" begincolumn="23" endcolumn="39" rule="AvoidThrowingRawExceptionTypes" ruleset="Design" class="BoardhistoryArray" method="safer" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#avoidthrowingrawexceptiontypes" priority="1">
Avoid throwing raw exception types.
</violation>
<violation beginline="41" endline="41" begincolumn="23" endcolumn="39" rule="AvoidThrowingRawExceptionTypes" ruleset="Design" class="BoardhistoryArray" method="fieldbrecks" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#avoidthrowingrawexceptiontypes" priority="1">
Avoid throwing raw exception types.
</violation>
</file>
<file name="/Users/noranemitz/IdeaProjects/Tictactoe/src/main/java/Computer.java">
<violation beginline="8" endline="8" begincolumn="8" endcolumn="13" rule="GodClass" ruleset="Design" class="Computer" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#godclass" priority="3">
Possible God Class (WMC=62, ATFD=51, TCC=0.000%)
</violation>
<violation beginline="17" endline="17" begincolumn="8" endcolumn="26" rule="LooseCoupling" ruleset="Best Practices" class="Computer" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_bestpractices.html#loosecoupling" priority="3">
Avoid using implementation types like 'ArrayList'; use the interface instead
</violation>
<violation beginline="197" endline="197" begincolumn="28" endcolumn="47" rule="NcssCount" ruleset="Design" class="Computer" method="getComputerMovement" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#ncsscount" priority="3">
The method 'getComputerMovement(Board)' has a NCSS line count of 70.
</violation>
<violation beginline="197" endline="197" begincolumn="28" endcolumn="47" rule="CognitiveComplexity" ruleset="Design" class="Computer" method="getComputerMovement" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#cognitivecomplexity" priority="3">
The method 'getComputerMovement(Board)' has a cognitive complexity of 73, current threshold is 15
</violation>
<violation beginline="197" endline="197" begincolumn="28" endcolumn="47" rule="CyclomaticComplexity" ruleset="Design" class="Computer" method="getComputerMovement" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'getComputerMovement(Board)' has a cyclomatic complexity of 31.
</violation>
<violation beginline="197" endline="197" begincolumn="28" endcolumn="47" rule="NPathComplexity" ruleset="Design" class="Computer" method="getComputerMovement" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#npathcomplexity" priority="3">
The method 'getComputerMovement(Board)' has an NPath complexity of 345744, current threshold is 200
</violation>
<violation beginline="216" endline="216" begincolumn="31" endcolumn="32" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" class="Computer" method="getComputerMovement" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using literals in if statements
</violation>
<violation beginline="220" endline="222" begincolumn="21" endcolumn="22" rule="AvoidDeeplyNestedIfStmts" ruleset="Design" class="Computer" method="getComputerMovement" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#avoiddeeplynestedifstmts" priority="3">
Deeply nested if..then statements are hard to read
</violation>
<violation beginline="220" endline="220" begincolumn="38" endcolumn="39" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" class="Computer" method="getComputerMovement" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using literals in if statements
</violation>
<violation beginline="224" endline="226" begincolumn="21" endcolumn="22" rule="AvoidDeeplyNestedIfStmts" ruleset="Design" class="Computer" method="getComputerMovement" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#avoiddeeplynestedifstmts" priority="3">
Deeply nested if..then statements are hard to read
</violation>
<violation beginline="235" endline="235" begincolumn="31" endcolumn="32" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" class="Computer" method="getComputerMovement" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using literals in if statements
</violation>
<violation beginline="238" endline="240" begincolumn="21" endcolumn="22" rule="AvoidDeeplyNestedIfStmts" ruleset="Design" class="Computer" method="getComputerMovement" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#avoiddeeplynestedifstmts" priority="3">
Deeply nested if..then statements are hard to read
</violation>
<violation beginline="238" endline="238" begincolumn="38" endcolumn="39" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" class="Computer" method="getComputerMovement" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using literals in if statements
</violation>
<violation beginline="242" endline="244" begincolumn="21" endcolumn="18" rule="AvoidDeeplyNestedIfStmts" ruleset="Design" class="Computer" method="getComputerMovement" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#avoiddeeplynestedifstmts" priority="3">
Deeply nested if..then statements are hard to read
</violation>
<violation beginline="252" endline="252" begincolumn="31" endcolumn="32" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" class="Computer" method="getComputerMovement" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using literals in if statements
</violation>
<violation beginline="255" endline="257" begincolumn="21" endcolumn="22" rule="AvoidDeeplyNestedIfStmts" ruleset="Design" class="Computer" method="getComputerMovement" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#avoiddeeplynestedifstmts" priority="3">
Deeply nested if..then statements are hard to read
</violation>
<violation beginline="255" endline="255" begincolumn="38" endcolumn="39" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" class="Computer" method="getComputerMovement" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using literals in if statements
</violation>
<violation beginline="259" endline="261" begincolumn="21" endcolumn="18" rule="AvoidDeeplyNestedIfStmts" ruleset="Design" class="Computer" method="getComputerMovement" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#avoiddeeplynestedifstmts" priority="3">
Deeply nested if..then statements are hard to read
</violation>
<violation beginline="271" endline="271" begincolumn="31" endcolumn="32" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" class="Computer" method="getComputerMovement" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using literals in if statements
</violation>
<violation beginline="274" endline="276" begincolumn="21" endcolumn="22" rule="AvoidDeeplyNestedIfStmts" ruleset="Design" class="Computer" method="getComputerMovement" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#avoiddeeplynestedifstmts" priority="3">
Deeply nested if..then statements are hard to read
</violation>
<violation beginline="274" endline="274" begincolumn="38" endcolumn="39" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" class="Computer" method="getComputerMovement" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using literals in if statements
</violation>
<violation beginline="278" endline="280" begincolumn="21" endcolumn="18" rule="AvoidDeeplyNestedIfStmts" ruleset="Design" class="Computer" method="getComputerMovement" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#avoiddeeplynestedifstmts" priority="3">
Deeply nested if..then statements are hard to read
</violation>
<violation beginline="296" endline="296" begincolumn="27" endcolumn="28" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" class="Computer" method="getComputerMovement" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using literals in if statements
</violation>
<violation beginline="299" endline="299" begincolumn="33" endcolumn="34" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" class="Computer" method="getComputerMovement" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using literals in if statements
</violation>
</file>
<file name="/Users/noranemitz/IdeaProjects/Tictactoe/src/main/java/GameLoop.java">
<violation beginline="5" endline="5" begincolumn="8" endcolumn="13" rule="AtLeastOneConstructor" ruleset="Code Style" class="GameLoop" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_codestyle.html#atleastoneconstructor" priority="3">
Each class should declare at least one constructor
</violation>
<violation beginline="18" endline="18" begincolumn="17" endcolumn="23" rule="AvoidBranchingStatementAsLastInLoop" ruleset="Error Prone" class="GameLoop" method="start" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_errorprone.html#avoidbranchingstatementaslastinloop" priority="2">
Avoid using a branching statement as the last in a loop.
</violation>
</file>
<file name="/Users/noranemitz/IdeaProjects/Tictactoe/src/main/java/Infofield.java">
<violation beginline="5" endline="5" begincolumn="38" endcolumn="42" rule="AvoidFieldNameMatchingMethodName" ruleset="Error Prone" class="Infofield" variable="INFO" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_errorprone.html#avoidfieldnamematchingmethodname" priority="3">
Field INFO has the same name as a method
</violation>
<violation beginline="11" endline="11" begincolumn="30" endcolumn="38" rule="FieldNamingConventions" ruleset="Code Style" class="Infofield" variable="INSTANCE" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_codestyle.html#fieldnamingconventions" priority="1">
The static field name 'INSTANCE' doesn't match '[a-z][a-zA-Z0-9]*'
</violation>
<violation beginline="35" endline="35" begincolumn="27" endcolumn="43" rule="AvoidThrowingRawExceptionTypes" ruleset="Design" class="Infofield" method="info" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#avoidthrowingrawexceptiontypes" priority="1">
Avoid throwing raw exception types.
</violation>
</file>
<file name="/Users/noranemitz/IdeaProjects/Tictactoe/src/main/java/JsonFileRead.java">
<violation beginline="29" endline="29" begincolumn="23" endcolumn="34" rule="AvoidDuplicateLiterals" ruleset="Error Prone" class="JsonFileRead" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_errorprone.html#avoidduplicateliterals" priority="3">
The String literal "test.json" appears 6 times in this file; the first occurrence is on line 29
</violation>
<violation beginline="32" endline="32" begincolumn="12" endcolumn="24" rule="UnnecessaryConstructor" ruleset="Code Style" class="JsonFileRead" method="JsonFileRead" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_codestyle.html#unnecessaryconstructor" priority="3">
Avoid unnecessary constructors - the compiler will generate these for you
</violation>
<violation beginline="59" endline="59" begincolumn="34" endcolumn="49" rule="AvoidDuplicateLiterals" ruleset="Error Prone" class="JsonFileRead" method="matchcounter" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_errorprone.html#avoidduplicateliterals" priority="3">
The String literal "matchhistory " appears 4 times in this file; the first occurrence is on line 59
</violation>
<violation beginline="67" endline="67" begincolumn="17" endcolumn="25" rule="CognitiveComplexity" ruleset="Design" class="JsonFileRead" method="jsonRead" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#cognitivecomplexity" priority="3">
The method 'jsonRead()' has a cognitive complexity of 27, current threshold is 15
</violation>
<violation beginline="71" endline="71" begincolumn="25" endcolumn="27" rule="CloseResource" ruleset="Error Prone" class="JsonFileRead" method="jsonRead" variable="is" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_errorprone.html#closeresource" priority="3">
Ensure that resources like this FileInputStream object are closed after use
</violation>
<violation beginline="80" endline="80" begincolumn="60" endcolumn="68" rule="AvoidDuplicateLiterals" ruleset="Error Prone" class="JsonFileRead" method="jsonRead" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_errorprone.html#avoidduplicateliterals" priority="3">
The String literal " Name " appears 6 times in this file; the first occurrence is on line 80
</violation>
<violation beginline="117" endline="117" begincolumn="25" endcolumn="27" rule="CloseResource" ruleset="Error Prone" class="JsonFileRead" method="breck" variable="is" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_errorprone.html#closeresource" priority="3">
Ensure that resources like this FileInputStream object are closed after use
</violation>
<violation beginline="125" endline="127" begincolumn="17" endcolumn="18" rule="EmptyControlStatement" ruleset="Code Style" class="JsonFileRead" method="breck" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_codestyle.html#emptycontrolstatement" priority="3">
Empty if statement
</violation>
<violation beginline="135" endline="135" begincolumn="12" endcolumn="21" rule="LooseCoupling" ruleset="Best Practices" class="JsonFileRead" method="getPlayerArray" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_bestpractices.html#loosecoupling" priority="3">
Avoid using implementation types like 'ArrayList'; use the interface instead
</violation>
<violation beginline="139" endline="139" begincolumn="12" endcolumn="21" rule="LooseCoupling" ruleset="Best Practices" class="JsonFileRead" method="getComputerArray" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_bestpractices.html#loosecoupling" priority="3">
Avoid using implementation types like 'ArrayList'; use the interface instead
</violation>
<violation beginline="143" endline="143" begincolumn="12" endcolumn="29" rule="LooseCoupling" ruleset="Best Practices" class="JsonFileRead" method="getList" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_bestpractices.html#loosecoupling" priority="3">
Avoid using implementation types like 'ArrayList'; use the interface instead
</violation>
<violation beginline="148" endline="148" begincolumn="12" endcolumn="29" rule="LooseCoupling" ruleset="Best Practices" class="JsonFileRead" method="getList2" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_bestpractices.html#loosecoupling" priority="3">
Avoid using implementation types like 'ArrayList'; use the interface instead
</violation>
<violation beginline="169" endline="169" begincolumn="13" endcolumn="25" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" class="JsonFileRead" method="main" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary qualifier 'JsonFileRead': 'getInstance' is already in scope
</violation>
<violation beginline="171" endline="171" begincolumn="23" endcolumn="39" rule="AvoidThrowingRawExceptionTypes" ruleset="Design" class="JsonFileRead" method="main" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#avoidthrowingrawexceptiontypes" priority="1">
Avoid throwing raw exception types.
</violation>
</file>
<file name="/Users/noranemitz/IdeaProjects/Tictactoe/src/main/java/JsonWrite.java">
<violation beginline="15" endline="15" begincolumn="40" endcolumn="44" rule="FieldNamingConventions" ruleset="Code Style" class="JsonWrite" variable="lock" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_codestyle.html#fieldnamingconventions" priority="1">
The constant name 'lock' doesn't match '[A-Z][A-Z_0-9]*'
</violation>
<violation beginline="19" endline="19" begincolumn="24" endcolumn="34" rule="CognitiveComplexity" ruleset="Design" class="JsonWrite" method="jsonWriter" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#cognitivecomplexity" priority="3">
The method 'jsonWriter()' has a cognitive complexity of 24, current threshold is 15
</violation>
<violation beginline="19" endline="19" begincolumn="24" endcolumn="34" rule="CyclomaticComplexity" ruleset="Design" class="JsonWrite" method="jsonWriter" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'jsonWriter()' has a cyclomatic complexity of 16.
</violation>
<violation beginline="19" endline="19" begincolumn="24" endcolumn="34" rule="NPathComplexity" ruleset="Design" class="JsonWrite" method="jsonWriter" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#npathcomplexity" priority="3">
The method 'jsonWriter()' has an NPath complexity of 271, current threshold is 200
</violation>
<violation beginline="35" endline="35" begincolumn="58" endcolumn="66" rule="AvoidDuplicateLiterals" ruleset="Error Prone" class="JsonWrite" method="jsonWriter" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_errorprone.html#avoidduplicateliterals" priority="3">
The String literal " Name " appears 8 times in this file; the first occurrence is on line 35
</violation>
<violation beginline="70" endline="70" begincolumn="27" endcolumn="37" rule="UnusedLocalVariable" ruleset="Best Practices" class="JsonWrite" method="jsonWriter" variable="scoreBoard" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_bestpractices.html#unusedlocalvariable" priority="3">
Avoid unused local variables such as 'scoreBoard'.
</violation>
<violation beginline="72" endline="86" begincolumn="13" endcolumn="14" rule="ConfusingTernary" ruleset="Code Style" class="JsonWrite" method="jsonWriter" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_codestyle.html#confusingternary" priority="3">
Avoid if (x != y) ..; else ..;
</violation>
</file>
<file name="/Users/noranemitz/IdeaProjects/Tictactoe/src/main/java/KeepPlaying.java">
<violation beginline="24" endline="24" begincolumn="23" endcolumn="39" rule="AvoidThrowingRawExceptionTypes" ruleset="Design" class="KeepPlaying" method="keepPlaying" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#avoidthrowingrawexceptiontypes" priority="1">
Avoid throwing raw exception types.
</violation>
<violation beginline="44" endline="44" begincolumn="27" endcolumn="43" rule="AvoidThrowingRawExceptionTypes" ruleset="Design" class="KeepPlaying" method="keepPlaying" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#avoidthrowingrawexceptiontypes" priority="1">
Avoid throwing raw exception types.
</violation>
<violation beginline="46" endline="46" begincolumn="17" endcolumn="28" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" class="KeepPlaying" method="keepPlaying" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary qualifier 'KeepPlaying': 'keepPlaying' is already in scope
</violation>
<violation beginline="56" endline="56" begincolumn="23" endcolumn="39" rule="AvoidThrowingRawExceptionTypes" ruleset="Design" class="KeepPlaying" method="keepPlaying" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#avoidthrowingrawexceptiontypes" priority="1">
Avoid throwing raw exception types.
</violation>
<violation beginline="58" endline="58" begincolumn="9" endcolumn="23" rule="DoNotTerminateVM" ruleset="Error Prone" class="KeepPlaying" method="keepPlaying" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_errorprone.html#donotterminatevm" priority="3">
System.exit() should not be used in J2EE/JEE apps
</violation>
<violation beginline="68" endline="68" begincolumn="40" endcolumn="53" rule="UselessParentheses" ruleset="Code Style" class="KeepPlaying" method="timeStemp" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_codestyle.html#uselessparentheses" priority="4">
Useless parentheses.
</violation>
<violation beginline="74" endline="74" begincolumn="23" endcolumn="39" rule="AvoidThrowingRawExceptionTypes" ruleset="Design" class="KeepPlaying" method="timeStemp" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#avoidthrowingrawexceptiontypes" priority="1">
Avoid throwing raw exception types.
</violation>
</file>
<file name="/Users/noranemitz/IdeaProjects/Tictactoe/src/main/java/Login.java">
<violation beginline="6" endline="6" begincolumn="20" endcolumn="25" rule="AvoidFieldNameMatchingTypeName" ruleset="Error Prone" class="Login" variable="login" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_errorprone.html#avoidfieldnamematchingtypename" priority="3">
It is somewhat confusing to have a field name matching the declaring class name
</violation>
<violation beginline="8" endline="8" begincolumn="38" endcolumn="41" rule="FieldNamingConventions" ruleset="Code Style" class="Login" variable="yes" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_codestyle.html#fieldnamingconventions" priority="1">
The constant name 'yes' doesn't match '[A-Z][A-Z_0-9]*'
</violation>
<violation beginline="9" endline="9" begincolumn="38" endcolumn="40" rule="FieldNamingConventions" ruleset="Code Style" class="Login" variable="no" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_codestyle.html#fieldnamingconventions" priority="1">
The constant name 'no' doesn't match '[A-Z][A-Z_0-9]*'
</violation>
<violation beginline="19" endline="19" begincolumn="27" endcolumn="43" rule="AvoidThrowingRawExceptionTypes" ruleset="Design" class="Login" method="ask" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#avoidthrowingrawexceptiontypes" priority="1">
Avoid throwing raw exception types.
</violation>
<violation beginline="32" endline="32" begincolumn="31" endcolumn="47" rule="AvoidThrowingRawExceptionTypes" ruleset="Design" class="Login" method="ask" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#avoidthrowingrawexceptiontypes" priority="1">
Avoid throwing raw exception types.
</violation>
<violation beginline="38" endline="38" begincolumn="17" endcolumn="31" rule="DoNotTerminateVM" ruleset="Error Prone" class="Login" method="ask" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_errorprone.html#donotterminatevm" priority="3">
System.exit() should not be used in J2EE/JEE apps
</violation>
</file>
<file name="/Users/noranemitz/IdeaProjects/Tictactoe/src/main/java/MainTicTacToe.java">
<violation beginline="10" endline="10" begincolumn="23" endcolumn="39" rule="AvoidThrowingRawExceptionTypes" ruleset="Design" class="MainTicTacToe" method="main" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#avoidthrowingrawexceptiontypes" priority="1">
Avoid throwing raw exception types.
</violation>
</file>
<file name="/Users/noranemitz/IdeaProjects/Tictactoe/src/main/java/Match.java">
<violation beginline="1" endline="1" begincolumn="1" endcolumn="28" rule="UnnecessaryImport" ruleset="Code Style" class="Match" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_codestyle.html#unnecessaryimport" priority="4">
Unused import 'java.io.IOException'
</violation>
<violation beginline="10" endline="10" begincolumn="16" endcolumn="21" rule="AvoidFieldNameMatchingTypeName" ruleset="Error Prone" class="Match" variable="match" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_errorprone.html#avoidfieldnamematchingtypename" priority="3">
It is somewhat confusing to have a field name matching the declaring class name
</violation>
<violation beginline="20" endline="20" begincolumn="9" endcolumn="14" rule="AssignmentToNonFinalStatic" ruleset="Error Prone" class="Match" method="Match" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_errorprone.html#assignmenttononfinalstatic" priority="3">
Possible unsafe assignment to non-final static field 'board' in a constructor.
</violation>
<violation beginline="23" endline="23" begincolumn="17" endcolumn="22" rule="CognitiveComplexity" ruleset="Design" class="Match" method="start" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#cognitivecomplexity" priority="3">
The method 'start()' has a cognitive complexity of 24, current threshold is 15
</violation>
<violation beginline="23" endline="23" begincolumn="17" endcolumn="22" rule="CyclomaticComplexity" ruleset="Design" class="Match" method="start" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'start()' has a cyclomatic complexity of 14.
</violation>
<violation beginline="23" endline="23" begincolumn="17" endcolumn="22" rule="NPathComplexity" ruleset="Design" class="Match" method="start" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#npathcomplexity" priority="3">
The method 'start()' has an NPath complexity of 1302, current threshold is 200
</violation>
</file>
<file name="/Users/noranemitz/IdeaProjects/Tictactoe/src/main/java/Password.java">
<violation beginline="15" endline="15" begincolumn="30" endcolumn="41" rule="AvoidDuplicateLiterals" ruleset="Error Prone" class="Password" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_errorprone.html#avoidduplicateliterals" priority="3">
The String literal "name.json" appears 5 times in this file; the first occurrence is on line 15
</violation>
<violation beginline="18" endline="18" begincolumn="38" endcolumn="48" rule="FieldNamingConventions" ruleset="Code Style" class="Password" variable="inputcheck" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_codestyle.html#fieldnamingconventions" priority="1">
The constant name 'inputcheck' doesn't match '[A-Z][A-Z_0-9]*'
</violation>
<violation beginline="110" endline="110" begincolumn="21" endcolumn="40" rule="AvoidPrintStackTrace" ruleset="Best Practices" class="Password" method="askSecurityQuestion" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_bestpractices.html#avoidprintstacktrace" priority="3">
Avoid printStackTrace(); use a logger call instead.
</violation>
</file>
<file name="/Users/noranemitz/IdeaProjects/Tictactoe/src/main/java/Player.java">
<violation beginline="3" endline="3" begincolumn="8" endcolumn="13" rule="AtLeastOneConstructor" ruleset="Code Style" class="Player" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_codestyle.html#atleastoneconstructor" priority="3">
Each class should declare at least one constructor
</violation>
<violation beginline="44" endline="44" begincolumn="9" endcolumn="27" rule="LooseCoupling" ruleset="Best Practices" class="Player" method="test" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_bestpractices.html#loosecoupling" priority="3">
Avoid using implementation types like 'ArrayList'; use the interface instead
</violation>
<violation beginline="44" endline="44" begincolumn="40" endcolumn="49" rule="UseDiamondOperator" ruleset="Code Style" class="Player" method="test" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_codestyle.html#usediamondoperator" priority="3">
Raw type use may be avoided by using a diamond: `new ArrayList&lt;&gt;()`
</violation>
<violation beginline="52" endline="52" begincolumn="13" endcolumn="60" rule="UselessParentheses" ruleset="Code Style" class="Player" method="test" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_codestyle.html#uselessparentheses" priority="4">
Useless parentheses.
</violation>
</file>
<file name="/Users/noranemitz/IdeaProjects/Tictactoe/src/main/java/Playername.java">
<violation beginline="9" endline="9" begincolumn="1" endcolumn="23" rule="UnnecessaryImport" ruleset="Code Style" class="Playername" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_codestyle.html#unnecessaryimport" priority="4">
Unused import 'java.util.List'
</violation>
<violation beginline="21" endline="21" begincolumn="30" endcolumn="41" rule="AvoidDuplicateLiterals" ruleset="Error Prone" class="Playername" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_errorprone.html#avoidduplicateliterals" priority="3">
The String literal "name.json" appears 4 times in this file; the first occurrence is on line 21
</violation>
<violation beginline="22" endline="22" begincolumn="38" endcolumn="49" rule="UnusedPrivateField" ruleset="Best Practices" class="Playername" variable="Playrestart" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_bestpractices.html#unusedprivatefield" priority="3">
Avoid unused private fields such as 'Playrestart'.
</violation>
<violation beginline="22" endline="22" begincolumn="38" endcolumn="49" rule="FieldNamingConventions" ruleset="Code Style" class="Playername" variable="Playrestart" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_codestyle.html#fieldnamingconventions" priority="1">
The constant name 'Playrestart' doesn't match '[A-Z][A-Z_0-9]*'
</violation>
<violation beginline="23" endline="23" begincolumn="38" endcolumn="48" rule="FieldNamingConventions" ruleset="Code Style" class="Playername" variable="inputcheck" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_codestyle.html#fieldnamingconventions" priority="1">
The constant name 'inputcheck' doesn't match '[A-Z][A-Z_0-9]*'
</violation>
<violation beginline="31" endline="31" begincolumn="23" endcolumn="39" rule="AvoidThrowingRawExceptionTypes" ruleset="Design" class="Playername" method="ask" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#avoidthrowingrawexceptiontypes" priority="1">
Avoid throwing raw exception types.
</violation>
</file>
<file name="/Users/noranemitz/IdeaProjects/Tictactoe/src/main/java/Position.java">
<violation beginline="36" endline="36" begincolumn="20" endcolumn="26" rule="OverrideBothEqualsAndHashcode" ruleset="Error Prone" class="Position" method="equals" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_errorprone.html#overridebothequalsandhashcode" priority="3">
Ensure you override both equals() and hashCode()
</violation>
</file>
<file name="/Users/noranemitz/IdeaProjects/Tictactoe/src/main/java/Print.java">
<violation beginline="11" endline="11" begincolumn="12" endcolumn="30" rule="LooseCoupling" ruleset="Best Practices" class="Print" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_bestpractices.html#loosecoupling" priority="3">
Avoid using implementation types like 'ArrayList'; use the interface instead
</violation>
<violation beginline="11" endline="11" begincolumn="51" endcolumn="60" rule="UseDiamondOperator" ruleset="Code Style" class="Print" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_codestyle.html#usediamondoperator" priority="3">
Raw type use may be avoided by using a diamond: `new ArrayList&lt;&gt;()`
</violation>
<violation beginline="14" endline="14" begincolumn="12" endcolumn="17" rule="UnnecessaryConstructor" ruleset="Code Style" class="Print" method="Print" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_codestyle.html#unnecessaryconstructor" priority="3">
Avoid unnecessary constructors - the compiler will generate these for you
</violation>
<violation beginline="30" endline="30" begincolumn="20" endcolumn="32" rule="UnusedLocalVariable" ruleset="Best Practices" class="Print" method="matchHistory" variable="objectreader" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_bestpractices.html#unusedlocalvariable" priority="3">
Avoid unused local variables such as 'objectreader'.
</violation>
<violation beginline="31" endline="31" begincolumn="9" endcolumn="26" rule="LooseCoupling" ruleset="Best Practices" class="Print" method="matchHistory" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_bestpractices.html#loosecoupling" priority="3">
Avoid using implementation types like 'ArrayList'; use the interface instead
</violation>
<violation beginline="31" endline="31" begincolumn="27" endcolumn="31" rule="UnusedLocalVariable" ruleset="Best Practices" class="Print" method="matchHistory" variable="list" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_bestpractices.html#unusedlocalvariable" priority="3">
Avoid unused local variables such as 'list'.
</violation>
<violation beginline="32" endline="32" begincolumn="9" endcolumn="26" rule="LooseCoupling" ruleset="Best Practices" class="Print" method="matchHistory" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_bestpractices.html#loosecoupling" priority="3">
Avoid using implementation types like 'ArrayList'; use the interface instead
</violation>
<violation beginline="32" endline="32" begincolumn="27" endcolumn="32" rule="UnusedLocalVariable" ruleset="Best Practices" class="Print" method="matchHistory" variable="list2" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_bestpractices.html#unusedlocalvariable" priority="3">
Avoid unused local variables such as 'list2'.
</violation>
<violation beginline="81" endline="81" begincolumn="23" endcolumn="39" rule="AvoidThrowingRawExceptionTypes" ruleset="Design" class="Print" method="matchHistory" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#avoidthrowingrawexceptiontypes" priority="1">
Avoid throwing raw exception types.
</violation>
<violation beginline="93" endline="93" begincolumn="23" endcolumn="39" rule="AvoidThrowingRawExceptionTypes" ruleset="Design" class="Print" method="breckBoard" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#avoidthrowingrawexceptiontypes" priority="1">
Avoid throwing raw exception types.
</violation>
</file>
<file name="/Users/noranemitz/IdeaProjects/Tictactoe/src/main/java/ScoreBoardPrinter.java">
<violation beginline="27" endline="27" begincolumn="17" endcolumn="29" rule="CyclomaticComplexity" ruleset="Design" class="ScoreBoardPrinter" method="winInfoPrint" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'winInfoPrint(Board)' has a cyclomatic complexity of 17.
</violation>
<violation beginline="27" endline="27" begincolumn="17" endcolumn="29" rule="NPathComplexity" ruleset="Design" class="ScoreBoardPrinter" method="winInfoPrint" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#npathcomplexity" priority="3">
The method 'winInfoPrint(Board)' has an NPath complexity of 900, current threshold is 200
</violation>
<violation beginline="28" endline="28" begincolumn="25" endcolumn="28" rule="CloseResource" ruleset="Error Prone" class="ScoreBoardPrinter" method="winInfoPrint" variable="fis" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_errorprone.html#closeresource" priority="3">
Ensure that resources like this FileInputStream object are closed after use
</violation>
<violation beginline="34" endline="34" begincolumn="27" endcolumn="43" rule="AvoidThrowingRawExceptionTypes" ruleset="Design" class="ScoreBoardPrinter" method="winInfoPrint" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#avoidthrowingrawexceptiontypes" priority="1">
Avoid throwing raw exception types.
</violation>
<violation beginline="39" endline="39" begincolumn="27" endcolumn="30" rule="CloseResource" ruleset="Error Prone" class="ScoreBoardPrinter" method="winInfoPrint" variable="isr" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_errorprone.html#closeresource" priority="3">
Ensure that resources like this InputStreamReader object are closed after use
</violation>
<violation beginline="48" endline="48" begincolumn="23" endcolumn="39" rule="AvoidThrowingRawExceptionTypes" ruleset="Design" class="ScoreBoardPrinter" method="winInfoPrint" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#avoidthrowingrawexceptiontypes" priority="1">
Avoid throwing raw exception types.
</violation>
<violation beginline="76" endline="76" begincolumn="17" endcolumn="32" rule="LinguisticNaming" ruleset="Code Style" class="ScoreBoardPrinter" method="getPrintetScore" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_codestyle.html#linguisticnaming" priority="3">
Linguistics Antipattern - The getter 'getPrintetScore' should not return void linguistically
</violation>
</file>
<file name="/Users/noranemitz/IdeaProjects/Tictactoe/src/main/java/ScoreBoardWriter.java">
<violation beginline="14" endline="14" begincolumn="12" endcolumn="28" rule="UnnecessaryConstructor" ruleset="Code Style" class="ScoreBoardWriter" method="ScoreBoardWriter" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_codestyle.html#unnecessaryconstructor" priority="3">
Avoid unnecessary constructors - the compiler will generate these for you
</violation>
<violation beginline="47" endline="47" begincolumn="17" endcolumn="27" rule="CyclomaticComplexity" ruleset="Design" class="ScoreBoardWriter" method="scoreWrite" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#cyclomaticcomplexity" priority="3">
The method 'scoreWrite()' has a cyclomatic complexity of 11.
</violation>
<violation beginline="48" endline="48" begincolumn="25" endcolumn="28" rule="CloseResource" ruleset="Error Prone" class="ScoreBoardWriter" method="scoreWrite" variable="fis" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_errorprone.html#closeresource" priority="3">
Ensure that resources like this FileInputStream object are closed after use
</violation>
<violation beginline="52" endline="52" begincolumn="23" endcolumn="39" rule="AvoidThrowingRawExceptionTypes" ruleset="Design" class="ScoreBoardWriter" method="scoreWrite" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#avoidthrowingrawexceptiontypes" priority="1">
Avoid throwing raw exception types.
</violation>
<violation beginline="56" endline="56" begincolumn="27" endcolumn="31" rule="CloseResource" ruleset="Error Prone" class="ScoreBoardWriter" method="scoreWrite" variable="isr1" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_errorprone.html#closeresource" priority="3">
Ensure that resources like this InputStreamReader object are closed after use
</violation>
<violation beginline="57" endline="57" begincolumn="24" endcolumn="27" rule="CloseResource" ruleset="Error Prone" class="ScoreBoardWriter" method="scoreWrite" variable="br2" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_errorprone.html#closeresource" priority="3">
Ensure that resources like this BufferedReader object are closed after use
</violation>
<violation beginline="67" endline="67" begincolumn="23" endcolumn="39" rule="AvoidThrowingRawExceptionTypes" ruleset="Design" class="ScoreBoardWriter" method="scoreWrite" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_design.html#avoidthrowingrawexceptiontypes" priority="1">
Avoid throwing raw exception types.
</violation>
<violation beginline="83" endline="95" begincolumn="9" endcolumn="10" rule="UseTryWithResources" ruleset="Best Practices" class="ScoreBoardWriter" method="scoreWrite" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_bestpractices.html#usetrywithresources" priority="3">
Consider using a try-with-resources statement instead of explicitly closing the resource
</violation>
<violation beginline="89" endline="89" begincolumn="13" endcolumn="34" rule="AvoidPrintStackTrace" ruleset="Best Practices" class="ScoreBoardWriter" method="scoreWrite" externalInfoUrl="https://docs.pmd-code.org/pmd-doc-7.3.0/pmd_rules_java_bestpractices.html#avoidprintstacktrace" priority="3">
Avoid printStackTrace(); use a logger call instead.
</violation>
</file>
<configerror rule="LoosePackageCoupling" msg="No packages or classes specified"/>
</pmd>
